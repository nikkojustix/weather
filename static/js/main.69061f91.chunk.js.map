{"version":3,"sources":["assets/icons/global/GlobalSvgSelector.tsx","components/Header/Logo.tsx","components/Header/City.tsx","components/Header/Cities.tsx","components/Header/Header.tsx","components/Main/Current.tsx","utils/windDirection.ts","components/Main/Info.tsx","components/Main/Main.tsx","utils/constants.ts","App.tsx","index.tsx"],"names":["GlobalSvgSelector","id","className","height","viewBox","width","xmlns","fill","fillRule","transform","d","cx","cy","r","Logo","props","City","cityName","getData","useContext","MyContext","onClick","Cities","Header","Current","data","iconUrl","weather","icon","name","Math","round","main","temp","src","alt","windDirection","deg","Info","feels_like","pressure","humidity","wind","speed","Main","baseUrl","apiKey","createContext","App","useState","coord","lon","lat","description","base","temp_min","temp_max","visibility","clouds","all","dt","sys","type","message","country","sunrise","sunset","timezone","cod","setData","useEffect","fetch","then","res","text","json","jsonData","city","Provider","value","e","target","textContent","console","log","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.69061f91.chunk.js","sourcesContent":["import React from 'react'\r\n\r\ninterface Props {\r\n  id: string\r\n}\r\n\r\nconst GlobalSvgSelector = ({ id }: Props) => {\r\n  switch (id) {\r\n    case 'logo':\r\n      return (\r\n        <svg className=\"logo\" height=\"32\" viewBox=\"0 0 40 32\" width=\"40\" xmlns=\"http://www.w3.org/2000/svg\"><g fill=\"none\" fillRule=\"evenodd\" transform=\"translate(-4 -8)\"><rect height=\"48\" width=\"48\" /><path d=\"M9.39365566,25.2069199 C10.8372041,26.6251854 12.8164401,27.5 15,27.5 C19.418278,27.5 23,23.918278 23,19.5 C23,18.7967476 22.909258,18.1146892 22.738844,17.4648945 C24.558222,15.0610569 27.4969236,13.5 30.8125,13.5 C36.3353475,13.5 40.8125,17.8313847 40.8125,23.1744186 C40.8125,24.1308381 40.6690426,25.0548423 40.4018094,25.9273903 C41.5108167,26.5299331 42.4098904,27.4003826 43.031949,28.4738413 C43.6548634,29.5487767 44,30.8272802 44,32.244186 C44,33.6610919 43.6548634,34.9395954 43.031949,36.0145308 C42.4090346,37.0894662 41.5083425,37.9608335 40.3972314,38.563467 C39.2861203,39.1661004 37.9645902,39.5 36.5,39.5 L11.5,39.5 C10.0354098,39.5 8.71387975,39.1661004 7.60276864,38.563467 C6.49165753,37.9608335 5.59096537,37.0894662 4.96805099,36.0145308 C4.3451366,34.9395954 4,33.6610919 4,32.244186 C4,30.8272802 4.3451366,29.5487767 4.96805099,28.4738413 C5.59096537,27.3989059 6.49165753,26.5275386 7.60276864,25.9249051 C7.95321793,25.7348319 8.32459967,25.5714923 8.7148004,25.436931 C8.70980645,25.4037053 9.00292634,25.3294154 9.39365566,25.2069199 Z\" fill=\"#4A90E2\" /><circle cx=\"15\" cy=\"19.5\" fill=\"#4A90E2\" r=\"6\" /><path d=\"M15,8.5 C15.5522847,8.5 16,8.94771525 16,9.5 L16,11.5 C16,12.0522847 15.5522847,12.5 15,12.5 C14.4477153,12.5 14,12.0522847 14,11.5 L14,9.5 C14,8.94771525 14.4477153,8.5 15,8.5 Z M22.0706637,11.0735111 C22.4937384,11.4285129 22.5489223,12.0592685 22.1939205,12.4823432 L20.9083453,14.0144321 C20.5533435,14.4375067 19.9225879,14.4926907 19.4995133,14.1376889 C19.0764386,13.7826871 19.0212546,13.1519315 19.3762564,12.7288568 L20.6618317,11.196768 C21.0168334,10.7736933 21.647589,10.7185093 22.0706637,11.0735111 Z M5.47372056,25 C5.19757818,24.5217074 5.36145334,23.910117 5.83974596,23.6339746 L7.57179677,22.6339746 C8.05008939,22.3578322 8.6616798,22.5217074 8.93782217,23 C9.21396455,23.4782926 9.05008939,24.089883 8.57179677,24.3660254 L6.83974596,25.3660254 C6.36145334,25.6421678 5.74986293,25.4782926 5.47372056,25 Z M4.16711472,17.58987 C4.26301796,17.0459757 4.78167634,16.6828072 5.32557065,16.7787105 L7.29518615,17.1260068 C7.83908046,17.2219101 8.20224897,17.7405685 8.10634573,18.2844628 C8.01044249,18.8283571 7.4917841,19.1915256 6.9478898,19.0956223 L4.97827429,18.748326 C4.43437999,18.6524227 4.07121148,18.1337643 4.16711472,17.58987 Z M7.92933629,11.0735111 C8.35241096,10.7185093 8.98316655,10.7736933 9.33816835,11.196768 L10.6237436,12.7288568 C10.9787454,13.1519315 10.9235614,13.7826871 10.5004867,14.1376889 C10.0774121,14.4926907 9.44665647,14.4375067 9.09165468,14.0144321 L7.80607946,12.4823432 C7.45107767,12.0592685 7.50626163,11.4285129 7.92933629,11.0735111 Z\" fill=\"#4A90E2\" /></g></svg>\r\n      )\r\n\r\n\r\n    default:\r\n      return null\r\n  }\r\n\r\n}\r\n\r\nexport default GlobalSvgSelector\r\n","import React from 'react'\r\nimport GlobalSvgSelector from '../../assets/icons/global/GlobalSvgSelector'\r\n\r\n\r\ninterface Props {\r\n\r\n}\r\n\r\nconst Logo = (props: Props) => {\r\n  return (\r\n    <div className=\"header__logo\">\r\n      <GlobalSvgSelector id=\"logo\" />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Logo\r\n\r\n","import React, { useContext } from 'react'\r\nimport { MyContext } from '../../App'\r\n\r\n\r\ninterface Props {\r\n  cityName: string\r\n}\r\n\r\nconst City = ({ cityName }: Props) => {\r\n  const { getData } = useContext(MyContext)\r\n\r\n  return (\r\n    <li className=\"dropdown__item\" onClick={getData}>{cityName}</li>\r\n  )\r\n}\r\n\r\nexport default City","import React from 'react'\r\nimport City from './City'\r\n\r\ninterface Props {\r\n\r\n}\r\n\r\nconst Cities = (props: Props) => {\r\n\r\n  return (\r\n    <ul className=\"dropdown\">\r\n      <City cityName={'Симферополь'} />\r\n      <City cityName={'Москва'} />\r\n      <City cityName={'Нью-Йорк'} />\r\n    </ul>\r\n  )\r\n}\r\n\r\nexport default Cities\r\n\r\n","import React from 'react'\r\nimport Logo from './Logo'\r\nimport Cities from './Cities'\r\n\r\ninterface Props {\r\n\r\n}\r\n\r\nconst Header = (props: Props) => {\r\n  return (\r\n    <header className=\"header\">\r\n      <div className=\"container\">\r\n        <div className=\"header__inner\">\r\n          <Logo />\r\n          <Cities />\r\n        </div>\r\n      </div>\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default Header\r\n\r\n","import React, { useContext } from 'react'\r\nimport { MyContext } from '../../App'\r\n\r\n\r\ninterface Props {\r\n\r\n}\r\n\r\nconst Current = (props: Props) => {\r\n  const { data } = useContext(MyContext)\r\n  const iconUrl: string = `images/${data.weather[0].icon}.png`\r\n\r\n  return (\r\n    <div className=\"main__col current\">\r\n\r\n      <h2 className=\"current__title\">{data.name}</h2>\r\n      <div className=\"current__content\">\r\n        <div className=\"current__temperature\">{Math.round(data.main.temp)}<sup>o</sup></div>\r\n        <img className=\"current__icon\" src={iconUrl} alt=\"\" />\r\n      </div>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Current\r\n","const windDirection = (deg: number): string => {\r\n  if (deg < 22.5 || deg >= 337.5) return 'северный'\r\n  else if (deg < 67.5) return 'северо-восточный'\r\n  else if (deg < 112.5) return 'восточный'\r\n  else if (deg < 157.5) return 'юго-восточный'\r\n  else if (deg < 202.5) return 'южный'\r\n  else if (deg < 247.5) return 'юго-западный'\r\n  else if (deg < 292.5) return 'западный'\r\n  else return 'северо-западный'\r\n}\r\n\r\n\r\nexport default windDirection","import React, { useContext } from 'react'\r\nimport { MyContext } from '../../App'\r\nimport windDirection from '../../utils/windDirection'\r\n\r\ninterface Props {\r\n\r\n}\r\n\r\nconst Info = (props: Props) => {\r\n  const { data } = useContext(MyContext)\r\n  return (\r\n    <div className=\"main__col info\">\r\n      <ul className=\"info__list\">\r\n        <li className=\"info__item\">\r\n          <div className=\"info__item-name\">Температура</div>\r\n          <div className=\"info__item-content\">{Math.round(data.main.temp)}<sup>o</sup> - ощущается как {Math.round(data.main.feels_like)}<sup>o</sup></div>\r\n        </li>\r\n        <li className=\"info__item\">\r\n          <div className=\"info__item-name\">Давление</div>\r\n          <div className=\"info__item-content\">{Math.round(data.main.pressure * 0.75)} мм ртутного столба</div>\r\n        </li>\r\n        <li className=\"info__item\">\r\n          <div className=\"info__item-name\">Влажность</div>\r\n          <div className=\"info__item-content\">{data.main.humidity}%</div>\r\n        </li>\r\n        <li className=\"info__item\">\r\n          <div className=\"info__item-name\">Ветер</div>\r\n          <div className=\"info__item-content\">{Math.round(data.wind.speed)} м/с {windDirection(data.wind.deg)}</div>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Info\r\n","import React from 'react'\r\nimport Current from './Current'\r\nimport Info from './Info'\r\n\r\ninterface Props {\r\n\r\n}\r\n\r\nconst Main = (props: Props) => {\r\n\r\n  return (\r\n    <main className=\"main\">\r\n      <div className=\"container\">\r\n        <div className=\"main__inner\">\r\n          <Current />\r\n          <Info />\r\n        </div >\r\n      </div>\r\n    </main>\r\n  )\r\n}\r\n\r\nexport default Main\r\n","export const baseUrl: string = 'https://api.openweathermap.org/data/2.5/'\r\nexport const apiKey: string = '71d4cc3b96e2310c2b89b64f623f285b'\r\n","import React, { createContext, useEffect, useState } from 'react'\r\nimport Header from './components/Header/Header'\r\nimport Main from './components/Main/Main'\r\nimport { baseUrl, apiKey } from './utils/constants'\r\n\r\ninterface Props {\r\n\r\n}\r\ntype contextType = {\r\n  getData: (e: any) => void,\r\n  data: dataType\r\n}\r\n\r\ntype dataType = {\r\n  coord: {\r\n    lon: number,\r\n    lat: number\r\n  },\r\n  weather: [\r\n    {\r\n      id: number,\r\n      main: string,\r\n      description: string,\r\n      icon: string\r\n    }\r\n  ],\r\n  base: string,\r\n  main: {\r\n    temp: number,\r\n    feels_like: number,\r\n    temp_min: number,\r\n    temp_max: number,\r\n    pressure: number,\r\n    humidity: number\r\n  },\r\n  visibility: number,\r\n  wind: {\r\n    speed: number,\r\n    deg: number\r\n  },\r\n  clouds: {\r\n    all: number\r\n  },\r\n  dt: number,\r\n  sys: {\r\n    type: number,\r\n    id: number,\r\n    message: number,\r\n    country: string,\r\n    sunrise: number,\r\n    sunset: number\r\n  },\r\n  timezone: number,\r\n  id: number,\r\n  name: string,\r\n  cod: number\r\n}\r\n\r\nexport const MyContext = createContext({} as contextType)\r\n\r\n\r\nconst App = (props: Props) => {\r\n\r\n  const [data, setData] = useState<dataType>({\r\n    coord: {\r\n      lon: 0,\r\n      lat: 0\r\n    },\r\n    weather: [\r\n      {\r\n        id: 0,\r\n        main: '',\r\n        description: '',\r\n        icon: ''\r\n      }\r\n    ],\r\n    base: '',\r\n    main: {\r\n      temp: 0,\r\n      feels_like: 0,\r\n      temp_min: 0,\r\n      temp_max: 0,\r\n      pressure: 0,\r\n      humidity: 0\r\n    },\r\n    visibility: 0,\r\n    wind: {\r\n      speed: 0,\r\n      deg: 0\r\n    },\r\n    clouds: {\r\n      all: 0\r\n    },\r\n    dt: 0,\r\n    sys: {\r\n      type: 0,\r\n      id: 0,\r\n      message: 0,\r\n      country: '',\r\n      sunrise: 0,\r\n      sunset: 0\r\n    },\r\n    timezone: 0,\r\n    id: 0,\r\n    name: '',\r\n    cod: 0\r\n  })\r\n\r\n  useEffect(() => {\r\n    fetch('https://api.ipify.org')\r\n      .then(res => res.text())\r\n      .then(data => {\r\n        fetch(`https://ipapi.co/${data}/json/`)\r\n          .then(res => res.json())\r\n          .then(jsonData => {\r\n            fetch(`${baseUrl}weather?q=${jsonData.city}&units=metric&lang=ru&appid=${apiKey}`)\r\n              .then(res => res.json())\r\n              .then(data => {\r\n                setData(data)\r\n              })\r\n          })\r\n      })\r\n  }, [])\r\n\r\n\r\n  const getData = (e: any) => {\r\n    fetch(`${baseUrl}weather?q=${e.target.textContent}&units=metric&lang=ru&appid=${apiKey}`)\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        setData(data)\r\n        console.log(data);\r\n      })\r\n  }\r\n\r\n  return (\r\n    <MyContext.Provider value={{ getData, data: data }}>\r\n      <div className=\"wrapper\">\r\n        <Header />\r\n        <Main />\r\n      </div>\r\n    </MyContext.Provider>\r\n  )\r\n}\r\n\r\nexport default App\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport './styles/index.scss'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}